# Matrix Multiplication: C = A * B
# A = [1 2]
#     [3 4]
# B = [5 6]
#     [7 8]
# Output: C in memory

start:
    # Initialdze matrices A and B in memory
    ld  $10, 0x10000          # Base address for matrix A
    ld  $11, 0x10010          # Base address for matrix B
    ld  $12, 0x10020          # Base address for matrix C (result)

    # A = [1 2; 3 4]
    ld  $1, 1                    # A[0][0]
    stw $1, $10[0]               # Store in memory
    ld  $1, 2                    # A[0][1]
    stw $1, $10[4]
    ld  $1, 3                    # A[1][0]
    stw $1, $10[8]
    ld  $1, 4                    # A[1][1]
    stw $1, $10[12]

    # B = [5 6; 7 8]
    ld  $2, 5                    # B[0][0]
    stw $2, $11[0]
    ld  $2, 6                    # B[0][1]
    stw $2, $11[4]
    ld  $2, 7                    # B[1][0]
    stw $2, $11[8]
    ld  $2, 8                    # B[1][1]
    stw $2, $11[12]

    # Matrix Multiplication
    # C[0][0] = A[0][0] * B[0][0] + A[0][1] * B[1][0]
    ldw $3, $10[0]               # Load A[0][0]
    ldw $4, $11[0]               # Load B[0][0]
    mul $5, $3, $4               # $5 = A[0][0] * B[0][0]
    ldw $3, $10[4]               # Load A[0][1]
    ldw $4, $11[8]               # Load B[1][0]
    mul $6, $3, $4               # $6 = A[0][1] * B[1][0]
    add $7, $5, $6               # $7 = $5 + $6 (C[0][0])
    stw $7, $12[0]               # Store C[0][0]

    # C[0][1] = A[0][0] * B[0][1] + A[0][1] * B[1][1]
    ldw $3, $10[0]               # Load A[0][0]
    ldw $4, $11[4]               # Load B[0][1]
    mul $5, $3, $4               # $5 = A[0][0] * B[0][1]
    ldw $3, $10[4]               # Load A[0][1]
    ldw $4, $11[12]              # Load B[1][1]
    mul $6, $3, $4               # $6 = A[0][1] * B[1][1]
    add $7, $5, $6               # $7 = $5 + $6 (C[0][1])
    stw $7, $12[4]               # Store C[0][1]

    # C[1][0] = A[1][0] * B[0][0] + A[1][1] * B[1][0]
    ldw $3, $10[8]               # Load A[1][0]
    ldw $4, $11[0]               # Load B[0][0]
    mul $5, $3, $4               # $5 = A[1][0] * B[0][0]
    ldw $3, $10[12]              # Load A[1][1]
    ldw $4, $11[8]               # Load B[1][0]
    mul $6, $3, $4               # $6 = A[1][1] * B[1][0]
    add $7, $5, $6               # $7 = $5 + $6 (C[1][0])
    stw $7, $12[8]               # Store C[1][0]

    # C[1][1] = A[1][0] * B[0][1] + A[1][1] * B[1][1]
    ldw $3, $10[8]               # Load A[1][0]
    ldw $4, $11[4]               # Load B[0][1]
    mul $5, $3, $4               # $5 = A[1][0] * B[0][1]
    ldw $3, $10[12]              # Load A[1][1]
    ldw $4, $11[12]              # Load B[1][1]
    mul $6, $3, $4               # $6 = A[1][1] * B[1][1]
    add $7, $5, $6               # $7 = $5 + $6 (C[1][1])
    stw $7, $12[12]              # Store C[1][1]

display_result:
    ld $11, 0xE0000000           # Base address of the memory-mapped IO
    stw $7, $11[0]               # Display the last calculated value for visual confirmation

# End of program
ld $11,0
jmp $11
