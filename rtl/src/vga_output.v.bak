`timescale 1ns/1ns

module vga_output (
    input               clock,          // 100MHz system clock
    input               reset,
    
	output	     	    VGA_CLK,        // 25MHz pixel clock
	output reg [7:0]	VGA_R,          //  Red
	output reg [7:0]	VGA_G,          //  Green
	output reg [7:0]	VGA_B,          //  Blue
	output reg      	VGA_HS,         //  Horizontal sync
	output reg      	VGA_VS          //  Vertical sync
);

// Clock divider for 25MHz
reg [1:0] clock_div;

// Horizontal timing counters
reg [9:0] h_count;
parameter H_VISIBLE = 640;
parameter H_FRONT_PORCH = 16;
parameter H_SYNC = 96;
parameter H_BACK_PORCH = 48;
parameter H_TOTAL = 800;

// Vertical timing counters  
reg [9:0] v_count;
parameter V_VISIBLE = 480;
parameter V_FRONT_PORCH = 10;
parameter V_SYNC = 2;
parameter V_BACK_PORCH = 33;
parameter V_TOTAL = 525;

assign VGA_CLK = clock_div[1];

always @(posedge clock) begin
    // Generate 25MHz pixel clock
    clock_div <= clock_div + 1;

    if (clock_div == 2'b11) begin
        // Horizontal & Vertical counters
        if (h_count == H_TOTAL-1) begin
            h_count <= 0;
            if (v_count == V_TOTAL-1)
                v_count <= 0;
            else    
                v_count <= v_count + 1;
        end else
            h_count <= h_count + 1;

        // Generate sync signals  (negative polarity)
        if (h_count == H_VISIBLE + H_FRONT_PORCH)
            VGA_HS <= 0;
        else if (h_count == H_VISIBLE + H_FRONT_PORCH + H_SYNC)
            VGA_HS <= 1;
            
        // Vertical sync (neggative polarity)
        if (v_count == V_VISIBLE + V_FRONT_PORCH)
            VGA_VS <= 0;
        else if (v_count == V_VISIBLE + V_FRONT_PORCH + V_SYNC)
            VGA_VS <= 1;

        // Generate a test pattern
        if (h_count < H_VISIBLE && v_count < V_VISIBLE) begin
            VGA_R <= h_count[7:0];
            VGA_G <= v_count[7:0];
            VGA_B <= {h_count[9:8], v_count[9:8], 4'b0};
        end else begin
            VGA_R <= 0;
            VGA_G <= 0;
            VGA_B <= 0;
        end

    end

    if (reset) begin
        clock_div <= 0;
        VGA_HS <= 1;
        VGA_VS <= 1;
        VGA_R <= 0;
        VGA_G <= 0;
        VGA_B <= 0;
        h_count <= 0;
        v_count <= 0;
    end

end

endmodule
