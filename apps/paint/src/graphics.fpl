
class Hwregs
    var   seven_seg   : Int    # 
    var   ledr        : Int    # 10 LEDs
    val   sw          : Int    # 10 Switches    
    val   key         : Int    # 4 Push buttons
    var   uart_tx     : Int    # Write = byte of data to transmit, read = number of slots free in fifo
    val   uart_rx     : Int    # 1 byte of data from the uart, -1 if no data
    val   mouse_x     : Int    # 10 bit mouse x position
    val   mouse_y     : Int    # 10 bit mouse y position
    val   mouse_btn   : Int    # 3 bit mouse buttons


fun drawPixel(x:Int, y:Int, color:Int)  
    if x<0 or x>=640 or y<0 or y>=480
        return
    val frameBuffer = (0x3f80000:Array<Char>)
    frameBuffer[y*640+x] = (color:Char)

fun abs(a:Int)->Int
    if a>=0
        return a
    else
        return -a

fun drawLine(x0: Int, y0: Int, x1: Int, y1: Int, color: Int)
    val dx = abs(x1-x0)
    val dy = abs(y1-y0)
    val sx = if x0 < x1 then 1 else -1
    val sy = if y0 < y1 then 1 else -1
    var err = dx - dy
    val frameBuffer = (0x3f80000:Array<Char>)

    var x = x0
    var y = y0
    while true
        frameBuffer[y*640+x] = (color:Char)
        if x = x1 and y = y1
            return
        val e2 = err * 2
        if e2 > -dy
            err = err - dy
            x = x + sx
        if e2 < dx
            err = err + dx
            y = y + sy

fun fillRect(x1: Int, y1: Int, x2:Int, y2:Int, color: Int)
    # Todo: Check for overflow
    val frameBuffer = (0x3f80000:Array<Char>)
    for y = y1 to y2
        for x = x1 to x2
            frameBuffer[y*640+x] = (color:Char)

fun drawPalette()
    for color = 0 to 255
        val y1 = 440 + 10 * (color / 64)
        val x1 = 9 * (color % 64)
        fillRect(x1+1, y1+1, x1+7, y1+9, color)

fun main()
    drawPalette()

    val hwregs = (0xe0000000:Hwregs)
    var prev_x = hwregs.mouse_x
    var prev_y = hwregs.mouse_y
    var prev_btn = hwregs.mouse_btn
    var color = 1

    while true
        val x = hwregs.mouse_x
        val y = hwregs.mouse_y
        val btn = hwregs.mouse_btn & 1

        # Mouse down in the drawing area draws a line
        if btn!=0 and y<440 and prev_y<440 
            drawLine(prev_x, prev_y, x, y, color)

        # look for the button being clicked in the palette area
        if btn=1 and prev_btn=0 and y>440 and x<576
            color = (x/9) + ((y-440)/10)*64
            fillRect(580,440,639,479,color)

        prev_x = x
        prev_y = y
    end while
