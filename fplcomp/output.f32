
/_start:
sub $sp, 4
stw $30, $sp[0]
jsr /main
ldw $30, $sp[0]
add $sp, 4
ret

/FreeMemChunk:
ret

/AllocatedMemChunk:
ret

/TypeDescriptor:
ret

/SystemVariables:
ret

/initializeMemorySystem:
ld $1, 256
ld $3, 66519040
ld $4, 4096
sub $2, $3, $4
stw $2, $1[0]
ld $4, 4096
ld $2, $4
ld $3, 815157357
stw $3, $2[0]
ld $3, 66519040
ld $4, 4096
sub $3, $3, $4
stw $3, $2[4]
ld $3, 0
stw $3, $2[8]
ld $3, 0
stw $3, $2[12]
ld $4, 4096
stw $4, $1[4]
ret

/dumpMemorySystem:
sub $sp, 8
stw $9, $sp[0]
stw $30, $sp[4]
ld $9, 4096
jmp @3
@1:
ldw $1, $9[0]
ld $2, 815157357
beq $1, $2, @6
ldw $1, $9[0]
ld $2, 600496568
beq $1, $2, @8
jmp @10
@6:
ld $1, &string0
ldw $3, $9[4]
ld $2, $9
jsr /print
jmp @4
@8:
ld $2, $9
ld $1, &string1
ldw $3, $2[4]
ldw $4, $2[8]
ldw $4, $4[0]
jsr /print
ld $1, &string2
jsr /print
jmp @4
@10:
ld $1, &string3
ldw $3, $9[4]
ldw $4, $9[0]
ld $2, $9
jsr /print
@4:
ldw $1, $9[4]
add $9, $9, $1
@3:
ld $1, 66519040
blt $9, $1, @1
ldw $9, $sp[0]
ldw $30, $sp[4]
add $sp, 8
ret

/addChunkToFreeList:
beq $2, 0, @ret
ld $3, 815157357
stw $3, $1[0]
stw $2, $1[4]
ld $4, 256
ldw $3, $4[4]
ld $5, 0
beq $3, $5, @7
ldw $5, $3[4]
bge $5, $2, @9
jmp @11
@7:
ld $5, 0
stw $5, $1[8]
stw $1, $4[4]
jmp @5
@9:
stw $3, $1[8]
stw $1, $4[4]
jmp @5
@11:
jmp @15
@13:
ldw $3, $3[8]
@15:
ldw $4, $3[8]
ld $5, 0
beq $4, $5, @14
ldw $4, $3[8]
ldw $4, $4[4]
blt $4, $2, @13
@14:
ldw $2, $3[8]
stw $2, $1[8]
stw $1, $3[8]
@5:
@ret:
ret

/malloc:
sub $sp, 16
stw $9, $sp[0]
stw $10, $sp[4]
stw $11, $sp[8]
stw $30, $sp[12]
ld $9, $2
bne $1, 0, @1
ld $8, 0
jmp @ret
@1:
add $1, $1, 31
sub $2, 0, 16
and $10, $1, $2
ld $1, 256
ldw $11, $1[4]
ld $8, 0
ld $2, $8
jmp @7
@5:
ld $2, $11
ldw $11, $11[8]
@7:
ld $8, 0
beq $11, $8, @6
ldw $3, $11[4]
blt $3, $10, @5
@6:
ld $8, 0
bne $11, $8, @9
ld $1, 4096
jsr /abort
ld $8, 0
jmp @ret
@9:
ld $8, 0
bne $2, $8, @17
ldw $2, $11[8]
stw $2, $1[4]
jmp @13
@17:
ldw $1, $11[8]
stw $1, $2[8]
ldw $1, $2[0]
ld $2, 815157357
beq $1, $2, @19
ld $1, 4097
jsr /abort
@19:
@13:
add $1, $11, $10
ldw $2, $11[4]
sub $2, $2, $10
jsr /addChunkToFreeList
ld $1, $11
ld $2, 600496568
stw $2, $1[0]
stw $10, $1[4]
stw $9, $1[8]
add $8, $11, 16
@ret:
ldw $9, $sp[0]
ldw $10, $sp[4]
ldw $11, $sp[8]
ldw $30, $sp[12]
add $sp, 16
ret

/free:
sub $sp, 4
stw $30, $sp[0]
ld $2, 0
beq $1, $2, @ret
sub $1, $1, 16
ldw $2, $1[0]
ld $3, 600496568
beq $2, $3, @7
ldw $1, $1[0]
ld $2, 815157357
beq $1, $2, @9
jmp @11
@7:
ldw $2, $1[4]
jsr /addChunkToFreeList
jmp @5
@9:
ld $1, 4098
jsr /abort
jmp @5
@11:
ld $1, 4097
jsr /abort
@5:
@ret:
ldw $30, $sp[0]
add $sp, 4
ret

/StringBuilder:
sub $sp, 12
stw $9, $sp[0]
stw $10, $sp[4]
stw $30, $sp[8]
ld $9, $1
ld $1, 128
stw $1, $9[0]
ld $1, 0
stw $1, $9[4]
ldw $10, $9[0]
ld $1, $10
ld $2, /String@descriptor
jsr /malloc
stw $10, $8[-4]
stw $8, $9[8]
ldw $9, $sp[0]
ldw $10, $sp[4]
ldw $30, $sp[8]
add $sp, 12
ret

/StringBuilder/resize:
sub $sp, 16
stw $9, $sp[0]
stw $10, $sp[4]
stw $11, $sp[8]
stw $30, $sp[12]
ld $9, $1
ld $11, $2
ldw $1, $9[0]
bge $1, $11, @1
stw $11, $9[0]
ldw $10, $9[8]
ld $1, $11
ld $2, /String@descriptor
jsr /malloc
stw $11, $8[-4]
stw $8, $9[8]
ldw $1, $9[8]
ldw $3, $9[0]
ld $2, $10
jsr /memcpy
ldw $1, $9[4]
ldw $2, $9[8]
stw $1, $2[-4]
ld $1, $10
jsr /free
@1:
ldw $9, $sp[0]
ldw $10, $sp[4]
ldw $11, $sp[8]
ldw $30, $sp[12]
add $sp, 16
ret

/StringBuilder/append:
sub $sp, 12
stw $9, $sp[0]
stw $10, $sp[4]
stw $30, $sp[8]
ld $9, $1
ld $10, $2
ldw $1, $9[4]
add $1, $1, 1
ldw $2, $9[0]
blt $1, $2, @1
ldw $1, $9[0]
lsl $2, $1, 1
ld $1, $9
jsr /StringBuilder/resize
@1:
ldw $1, $9[8]
ldw $2, $9[4]
add $1, $1, $2
stb $10, $1[0]
ldw $1, $9[4]
add $1, $1, 1
stw $1, $9[4]
ldw $1, $9[4]
ldw $2, $9[8]
stw $1, $2[-4]
ld $1, 0
ldw $2, $9[8]
ldw $3, $9[4]
add $2, $2, $3
stb $1, $2[0]
ldw $9, $sp[0]
ldw $10, $sp[4]
ldw $30, $sp[8]
add $sp, 12
ret

/StringBuilder/appendString:
sub $sp, 20
stw $9, $sp[0]
stw $10, $sp[4]
stw $11, $sp[8]
stw $12, $sp[12]
stw $30, $sp[16]
ld $9, $1
ld $10, $2
ld $12, 0
ldw $11, $10[-4]
jmp @2
@1:
add $1, $10, $12
ldb $2, $1[0]
ld $1, $9
jsr /StringBuilder/append
add $12, $12, 1
@2:
blt $12, $11, @1
ldw $9, $sp[0]
ldw $10, $sp[4]
ldw $11, $sp[8]
ldw $12, $sp[12]
ldw $30, $sp[16]
add $sp, 20
ret

/StringBuilder/intToHex:
sub $sp, 20
stw $9, $sp[0]
stw $10, $sp[4]
stw $11, $sp[8]
stw $12, $sp[12]
stw $30, $sp[16]
ld $10, $2
ld $11, $3
ld $1, 12
ld $2, /StringBuilder@descriptor
jsr /malloc
ld $9, $8
ld $1, $9
jsr /StringBuilder
ld $1, $11
ld $11, 0
ld $12, 7
jmp @2
@1:
lsr $2, $10, 28
ld $3, 10
blt $2, $3, @3
add $2, $2, 7
@3:
bne $1, 0, @9
beq $2, 0, @7
@9:
add $2, $2, 48
ld $1, $9
jsr /StringBuilder/append
ld $1, 1
@7:
lsl $10, $10, 4
add $11, $11, 1
@2:
bge $12, $11, @1
ldw $10, $9[8]
ld $1, $9
jsr /free
ld $8, $10
ldw $9, $sp[0]
ldw $10, $sp[4]
ldw $11, $sp[8]
ldw $12, $sp[12]
ldw $30, $sp[16]
add $sp, 20
ret

/StringBuilder/intToString:
sub $sp, 20
stw $9, $sp[0]
stw $10, $sp[4]
stw $11, $sp[8]
stw $12, $sp[12]
stw $30, $sp[16]
ld $11, $2
ld $1, 12
ld $2, /StringBuilder@descriptor
jsr /malloc
ld $9, $8
ld $1, $9
jsr /StringBuilder
bge $11, 0, @1
ld $1, $9
ld $2, 45
jsr /StringBuilder/append
sub $11, 0, $11
@1:
ld $10, 16
ld $1, 16
ld $2, /Array<Char>@descriptor
jsr /malloc
stw $10, $8[-4]
ld $10, $8
ld $12, 0
@5:
mods $1, $11, 10
add $1, $1, 48
add $2, $10, $12
stb $1, $2[0]
add $12, $12, 1
divs $11, $11, 10
bne $11, 0, @5
jmp @9
@7:
sub $12, $12, 1
add $1, $10, $12
ldb $2, $1[0]
ld $1, $9
jsr /StringBuilder/append
@9:
blt 0, $12, @7
ld $1, $10
jsr /free
ldw $10, $9[8]
ld $1, $9
jsr /free
ld $8, $10
ldw $9, $sp[0]
ldw $10, $sp[4]
ldw $11, $sp[8]
ldw $12, $sp[12]
ldw $30, $sp[16]
add $sp, 20
ret

/StringBuilder/appendWithPad:
sub $sp, 24
stw $9, $sp[0]
stw $10, $sp[4]
stw $11, $sp[8]
stw $12, $sp[12]
stw $13, $sp[16]
stw $30, $sp[20]
ld $9, $1
ld $11, $2
ld $10, $4
ldw $1, $11[-4]
sub $12, $3, $1
bge 0, $12, @1
beq $10, 0, @1
ld $13, 0
jmp @7
@6:
ld $1, $9
ld $2, 32
jsr /StringBuilder/append
add $13, $13, 1
@7:
blt $13, $12, @6
@1:
ld $1, $9
ld $2, $11
jsr /StringBuilder/appendString
bge 0, $12, @8
ld $1, 0
bne $10, $1, @8
ld $10, 0
jmp @14
@13:
ld $1, $9
ld $2, 32
jsr /StringBuilder/append
add $10, $10, 1
@14:
blt $10, $12, @13
@8:
ldw $9, $sp[0]
ldw $10, $sp[4]
ldw $11, $sp[8]
ldw $12, $sp[12]
ldw $13, $sp[16]
ldw $30, $sp[20]
add $sp, 24
ret

/StringBuilder/toString:
ldw $8, $1[8]
ret

/StringBuilder/insert:
sub $sp, 16
stw $9, $sp[0]
stw $10, $sp[4]
stw $11, $sp[8]
stw $30, $sp[12]
ld $9, $1
ld $11, $2
ld $10, $3
ldw $1, $9[4]
add $1, $1, 1
ldw $2, $9[0]
blt $1, $2, @1
ldw $1, $9[0]
lsl $2, $1, 1
ld $1, $9
jsr /StringBuilder/resize
@1:
ldw $1, $9[4]
blt $11, $1, @6
ldw $11, $9[4]
jmp @7
@6:
@7:
ldw $1, $9[4]
jmp @9
@8:
ldw $2, $9[8]
sub $3, $1, 1
add $2, $2, $3
ldb $2, $2[0]
ldw $3, $9[8]
add $3, $3, $1
stb $2, $3[0]
sub $1, $1, 1
@9:
blt $11, $1, @8
ldw $1, $9[8]
add $1, $1, $11
stb $10, $1[0]
ldw $1, $9[4]
add $1, $1, 1
stw $1, $9[4]
ldw $1, $9[4]
ldw $2, $9[8]
stw $1, $2[-4]
ld $1, 0
ldw $2, $9[8]
ldw $3, $9[4]
add $2, $2, $3
stb $1, $2[0]
ldw $9, $sp[0]
ldw $10, $sp[4]
ldw $11, $sp[8]
ldw $30, $sp[12]
add $sp, 16
ret

/StringBuilder/remove:
ldw $3, $1[4]
bge $2, $3, @ret
ldw $3, $1[4]
sub $3, $3, 1
jmp @6
@5:
ldw $4, $1[8]
add $5, $2, 1
add $4, $4, $5
ldb $4, $4[0]
ldw $5, $1[8]
add $5, $5, $2
stb $4, $5[0]
add $2, $2, 1
@6:
bge $3, $2, @5
ld $2, 0
ldw $3, $1[8]
ldw $4, $1[4]
add $3, $3, $4
stb $2, $3[0]
ldw $2, $1[4]
sub $2, $2, 1
stw $2, $1[4]
ldw $2, $1[4]
ldw $1, $1[8]
stw $2, $1[-4]
@ret:
ret

/StringBuilder/clear:
ld $2, 0
stw $2, $1[4]
ld $2, 0
ldw $1, $1[8]
stw $2, $1[-4]
ret

/StringBuilder/get:
ldw $1, $1[8]
add $1, $1, $2
ldb $8, $1[0]
ret

/StringBuilder/vsprintf:
sub $sp, 48
stw $9, $sp[0]
stw $10, $sp[4]
stw $11, $sp[8]
stw $12, $sp[12]
stw $13, $sp[16]
stw $14, $sp[20]
stw $15, $sp[24]
stw $16, $sp[28]
stw $17, $sp[32]
stw $18, $sp[36]
stw $19, $sp[40]
stw $30, $sp[44]
ld $9, $1
ld $10, $2
ld $11, $3
ld $16, 0
ld $1, 0
ld $18, $1
ld $17, 0
ld $1, 1
ld $12, $1
ld $1, 0
ld $13, $1
ld $15, 0
ldw $14, $10[-4]
jmp @2
@1:
add $1, $10, $15
ldb $19, $1[0]
beq $18, 0, @7
ld $1, 45
beq $1, $19, @10
ld $1, 48
beq $1, $19, @11
ld $1, 49
beq $1, $19, @12
ld $1, 50
beq $1, $19, @12
ld $1, 51
beq $1, $19, @12
ld $1, 52
beq $1, $19, @12
ld $1, 53
beq $1, $19, @12
ld $1, 54
beq $1, $19, @12
ld $1, 55
beq $1, $19, @12
ld $1, 56
beq $1, $19, @12
ld $1, 57
beq $1, $19, @12
ld $1, 115
beq $1, $19, @13
ld $1, 120
beq $1, $19, @14
ld $1, 100
beq $1, $19, @15
ld $1, 99
beq $1, $19, @16
ld $1, 37
beq $1, $19, @17
jmp @18
@10:
ld $1, 0
ld $12, $1
jmp @9
@11:
bne $17, 0, @23
ld $1, 1
ld $13, $1
jmp @19
@23:
mul $17, $17, 10
@19:
jmp @9
@12:
mul $1, $17, 10
add $1, $1, $19
sub $17, $1, 48
jmp @9
@13:
lsl $1, $16, 2
add $1, $11, $1
ldw $2, $1[0]
ld $1, $9
ld $3, $17
ld $4, $12
jsr /StringBuilder/appendWithPad
add $16, $16, 1
ld $1, 0
ld $18, $1
jmp @9
@14:
lsl $1, $16, 2
add $1, $11, $1
ldw $2, $1[0]
ld $1, $9
ld $3, $13
jsr /StringBuilder/intToHex
ld $19, $8
ld $1, $9
ld $2, $19
ld $3, $17
ld $4, $12
jsr /StringBuilder/appendWithPad
add $16, $16, 1
ld $1, 0
ld $18, $1
ld $1, $19
jsr /free
jmp @9
@15:
lsl $1, $16, 2
add $1, $11, $1
ldw $2, $1[0]
ld $1, $9
jsr /StringBuilder/intToString
ld $19, $8
ld $1, $9
ld $2, $19
ld $3, $17
ld $4, $12
jsr /StringBuilder/appendWithPad
add $16, $16, 1
ld $1, 0
ld $18, $1
ld $1, $19
jsr /free
jmp @9
@16:
lsl $1, $16, 2
add $1, $11, $1
ldw $2, $1[0]
ld $1, $9
jsr /StringBuilder/append
add $16, $16, 1
ld $1, 0
ld $18, $1
jmp @9
@17:
ld $1, $9
ld $2, 37
jsr /StringBuilder/append
ld $1, 0
ld $18, $1
jmp @9
@18:
ld $1, $9
ld $2, 37
jsr /StringBuilder/append
ld $1, $9
ld $2, $19
jsr /StringBuilder/append
ld $1, 0
ld $18, $1
@9:
ld $1, 0
bne $18, $1, @3
ld $17, 0
ld $1, 1
ld $12, $1
ld $1, 0
ld $13, $1
jmp @3
@7:
ld $1, 37
bne $19, $1, @35
ld $1, 1
ld $18, $1
jmp @31
@35:
ld $1, $9
ld $2, $19
jsr /StringBuilder/append
@31:
@3:
add $15, $15, 1
@2:
blt $15, $14, @1
ldw $9, $sp[0]
ldw $10, $sp[4]
ldw $11, $sp[8]
ldw $12, $sp[12]
ldw $13, $sp[16]
ldw $14, $sp[20]
ldw $15, $sp[24]
ldw $16, $sp[28]
ldw $17, $sp[32]
ldw $18, $sp[36]
ldw $19, $sp[40]
ldw $30, $sp[44]
add $sp, 48
ret

/StringBuilder/sprintf:
sub $sp, 4
stw $30, $sp[0]
jsr /StringBuilder/vsprintf
ldw $30, $sp[0]
add $sp, 4
ret

/StringBuilder/delete:
sub $sp, 4
stw $30, $sp[0]
ldw $1, $1[8]
jsr /free
ldw $30, $sp[0]
add $sp, 4
ret

/List:
sub $sp, 12
stw $9, $sp[0]
stw $10, $sp[4]
stw $30, $sp[8]
ld $9, $1
ld $1, 8
stw $1, $9[0]
ld $1, 0
stw $1, $9[4]
ldw $10, $9[0]
lsl $1, $10, 2
ld $2, /Array<List.T>@descriptor
jsr /malloc
stw $10, $8[-4]
stw $8, $9[8]
ldw $9, $sp[0]
ldw $10, $sp[4]
ldw $30, $sp[8]
add $sp, 12
ret

/List/add:
sub $sp, 20
stw $9, $sp[0]
stw $10, $sp[4]
stw $11, $sp[8]
stw $12, $sp[12]
stw $30, $sp[16]
ld $9, $1
ld $10, $2
ldw $1, $9[4]
ldw $2, $9[0]
bne $1, $2, @1
ldw $11, $9[8]
ldw $1, $9[0]
lsl $12, $1, 1
lsl $1, $12, 2
ld $2, /Array<List.T>@descriptor
jsr /malloc
stw $12, $8[-4]
stw $8, $9[8]
ld $1, 0
ldw $2, $9[0]
jmp @6
@5:
lsl $3, $1, 2
add $3, $11, $3
ldw $3, $3[0]
ldw $4, $9[8]
lsl $5, $1, 2
add $4, $4, $5
stw $3, $4[0]
add $1, $1, 1
@6:
blt $1, $2, @5
ld $1, $11
jsr /free
ldw $1, $9[0]
lsl $1, $1, 1
stw $1, $9[0]
@1:
ldw $1, $9[8]
ldw $2, $9[4]
lsl $2, $2, 2
add $1, $1, $2
stw $10, $1[0]
ldw $1, $9[4]
add $1, $1, 1
stw $1, $9[4]
ldw $9, $sp[0]
ldw $10, $sp[4]
ldw $11, $sp[8]
ldw $12, $sp[12]
ldw $30, $sp[16]
add $sp, 20
ret

/List/get:
sub $sp, 12
stw $9, $sp[0]
stw $10, $sp[4]
stw $30, $sp[8]
ld $10, $1
ld $9, $2
blt $9, 0, @3
ldw $1, $10[4]
blt $9, $1, @1
@3:
ld $1, 4099
jsr /abort
@1:
ldw $1, $10[8]
lsl $2, $9, 2
add $1, $1, $2
ldw $8, $1[0]
ldw $9, $sp[0]
ldw $10, $sp[4]
ldw $30, $sp[8]
add $sp, 12
ret

/List/size:
ldw $8, $1[4]
ret

/List/remove:
sub $sp, 12
stw $9, $sp[0]
stw $10, $sp[4]
stw $30, $sp[8]
ld $9, $1
ld $10, $2
blt $10, 0, @3
ldw $1, $9[4]
blt $10, $1, @1
@3:
ld $1, 4099
jsr /abort
@1:
ldw $1, $9[8]
lsl $2, $10, 2
add $1, $1, $2
ldw $8, $1[0]
ldw $1, $9[4]
sub $1, $1, 1
stw $1, $9[4]
ldw $1, $9[4]
jmp @7
@6:
ldw $2, $9[8]
add $3, $10, 1
lsl $3, $3, 2
add $2, $2, $3
ldw $2, $2[0]
ldw $3, $9[8]
lsl $4, $10, 2
add $3, $3, $4
stw $2, $3[0]
add $10, $10, 1
@7:
blt $10, $1, @6
ldw $9, $sp[0]
ldw $10, $sp[4]
ldw $30, $sp[8]
add $sp, 12
ret

/List/clear:
ld $2, 0
stw $2, $1[4]
ret

/List/delete:
sub $sp, 4
stw $30, $sp[0]
ldw $1, $1[8]
jsr /free
ldw $30, $sp[0]
add $sp, 4
ret

/stringConcat:
sub $sp, 24
stw $9, $sp[0]
stw $10, $sp[4]
stw $11, $sp[8]
stw $12, $sp[12]
stw $13, $sp[16]
stw $30, $sp[20]
ld $9, $1
ld $10, $2
ld $11, 0
ld $1, 0
jmp @2
@1:
lsl $2, $1, 2
add $2, $9, $2
ldw $2, $2[0]
ldw $2, $2[-4]
add $11, $11, $2
add $1, $1, 1
@2:
blt $1, $10, @1
ld $1, $11
ld $2, /String@descriptor
jsr /malloc
stw $11, $8[-4]
ld $12, $8
ld $13, 0
ld $11, 0
jmp @4
@3:
add $1, $12, $13
lsl $2, $11, 2
add $2, $9, $2
ldw $2, $2[0]
lsl $3, $11, 2
add $3, $9, $3
ldw $3, $3[0]
ldw $3, $3[-4]
jsr /memcpy
lsl $1, $11, 2
add $1, $9, $1
ldw $1, $1[0]
ldw $1, $1[-4]
add $13, $13, $1
add $11, $11, 1
@4:
blt $11, $10, @3
ld $8, $12
ldw $9, $sp[0]
ldw $10, $sp[4]
ldw $11, $sp[8]
ldw $12, $sp[12]
ldw $13, $sp[16]
ldw $30, $sp[20]
add $sp, 24
ret

/strcmp:
ldw $3, $1[-4]
ldw $4, $2[-4]
bge $3, $4, @2
ldw $3, $1[-4]
jmp @3
@2:
ldw $3, $2[-4]
@3:
ld $4, 0
jmp @5
@4:
add $5, $1, $4
ldb $5, $5[0]
add $6, $2, $4
ldb $6, $6[0]
beq $5, $6, @6
add $1, $1, $4
ldb $1, $1[0]
add $2, $2, $4
ldb $2, $2[0]
sub $8, $1, $2
jmp @ret
@6:
add $4, $4, 1
@5:
blt $4, $3, @4
ldw $1, $1[-4]
ldw $2, $2[-4]
sub $8, $1, $2
@ret:
ret

/strequals:
bne $1, $2, @1
ld $8, 1
jmp @ret
@1:
ldw $3, $1[-4]
ldw $4, $2[-4]
beq $3, $4, @5
ld $8, 0
jmp @ret
@5:
ld $4, 0
ldw $3, $1[-4]
jmp @10
@9:
add $5, $1, $4
ldb $5, $5[0]
add $6, $2, $4
ldb $6, $6[0]
beq $5, $6, @11
ld $8, 0
jmp @ret
@11:
add $4, $4, 1
@10:
blt $4, $3, @9
ld $8, 1
@ret:
ret

/substring:
sub $sp, 20
stw $9, $sp[0]
stw $10, $sp[4]
stw $11, $sp[8]
stw $12, $sp[12]
stw $30, $sp[16]
ld $11, $1
ld $10, $2
ld $9, $3
blt $10, 0, @3
ldw $1, $11[-4]
bge $10, $1, @3
blt $9, 0, @3
add $1, $10, $9
ldw $2, $11[-4]
bge $2, $1, @1
@3:
ld $1, 4099
jsr /abort
ld $8, 0
jmp @ret
@1:
ld $1, $9
ld $2, /String@descriptor
jsr /malloc
stw $9, $8[-4]
ld $12, $8
ld $1, $12
add $2, $11, $10
ld $3, $9
jsr /memcpy
ld $8, $12
@ret:
ldw $9, $sp[0]
ldw $10, $sp[4]
ldw $11, $sp[8]
ldw $12, $sp[12]
ldw $30, $sp[16]
add $sp, 20
ret

/splitString:
sub $sp, 28
stw $9, $sp[0]
stw $10, $sp[4]
stw $11, $sp[8]
stw $12, $sp[12]
stw $13, $sp[16]
stw $14, $sp[20]
stw $30, $sp[24]
ld $9, $1
ld $12, $2
ld $1, 12
ld $2, /List<String>@descriptor
jsr /malloc
ld $10, $8
ld $1, $10
jsr /List
ld $11, 0
ld $1, 0
ld $14, 0
ldw $13, $9[-4]
jmp @2
@1:
add $2, $9, $14
ldb $2, $2[0]
bne $2, $12, @4
bne $1, 0, @5
@4:
add $2, $9, $14
ldb $2, $2[0]
beq $2, $12, @3
xor $2, $1, 1
bne $2, 0, @8
jmp @3
@5:
sub $3, $14, $11
ld $1, $9
ld $2, $11
jsr /substring
ld $1, $10
ld $2, $8
jsr /List/add
ld $1, 0
jmp @3
@8:
ld $11, $14
ld $1, 1
@3:
add $14, $14, 1
@2:
blt $14, $13, @1
beq $1, 0, @11
ldw $1, $9[-4]
sub $3, $1, $11
ld $1, $9
ld $2, $11
jsr /substring
ld $1, $10
ld $2, $8
jsr /List/add
@11:
ld $8, $10
ldw $9, $sp[0]
ldw $10, $sp[4]
ldw $11, $sp[8]
ldw $12, $sp[12]
ldw $13, $sp[16]
ldw $14, $sp[20]
ldw $30, $sp[24]
add $sp, 28
ret

/printNumber:
sub $sp, 8
stw $9, $sp[0]
stw $30, $sp[4]
ld $9, $1
ld $1, &string4
ld $2, $9
jsr /strequals
bne $8, 0, @2
ld $1, &string6
ld $2, $9
jsr /strequals
bne $8, 0, @3
ld $1, &string7
ld $2, $9
jsr /strequals
bne $8, 0, @4
jmp @5
@2:
ld $1, &string5
ld $2, 1
jsr /print
jmp @1
@3:
ld $1, &string5
ld $2, 2
jsr /print
jmp @1
@4:
ld $1, &string5
ld $2, 3
jsr /print
jmp @1
@5:
ld $1, &string8
jsr /print
@1:
ldw $9, $sp[0]
ldw $30, $sp[4]
add $sp, 8
ret

/main:
sub $sp, 4
stw $30, $sp[0]
ld $1, &string4
jsr /printNumber
ld $1, &string6
jsr /printNumber
ld $1, &string7
jsr /printNumber
ld $1, &string9
jsr /printNumber
ld $1, &string10
jsr /printNumber
ldw $30, $sp[0]
add $sp, 4
ret

# ClassDescriptor String
/String@descriptor:
dcw &string11

# ClassDescriptor StringBuilder
/StringBuilder@descriptor:
dcw &string12

# ClassDescriptor List<String>
/List<String>@descriptor:
dcw &string13

# ClassDescriptor Array<Char>
/Array<Char>@descriptor:
dcw &string14

# ClassDescriptor Array<List.T>
/Array<List.T>@descriptor:
dcw &string15
# "%x %x FREE"
dcw 11
&string0:
dcw 0x25207825
dcw 0x52462078
dcw 0x000A4545
# "%x %x %s"
dcw 8
&string1:
dcw 0x25207825
dcw 0x73252078
dcw 0x00000000
# ""
dcw 1
&string2:
dcw 0x0000000A
# "%x %x ERROR: Unknown magic %x"
dcw 30
&string3:
dcw 0x25207825
dcw 0x52452078
dcw 0x3A524F52
dcw 0x6B6E5520
dcw 0x6E776F6E
dcw 0x67616D20
dcw 0x25206369
dcw 0x00000A78
# "one"
dcw 3
&string4:
dcw 0x00656E6F
# "%d"
dcw 3
&string5:
dcw 0x000A6425
# "two"
dcw 3
&string6:
dcw 0x006F7774
# "three"
dcw 5
&string7:
dcw 0x65726874
dcw 0x00000065
# "unknown"
dcw 8
&string8:
dcw 0x6E6B6E75
dcw 0x0A6E776F
dcw 0x00000000
# "four"
dcw 4
&string9:
dcw 0x72756F66
dcw 0x00000000
# "five"
dcw 4
&string10:
dcw 0x65766966
dcw 0x00000000
# "String"
dcw 6
&string11:
dcw 0x69727453
dcw 0x0000676E
# "StringBuilder"
dcw 13
&string12:
dcw 0x69727453
dcw 0x7542676E
dcw 0x65646C69
dcw 0x00000072
# "List<String>"
dcw 12
&string13:
dcw 0x7473694C
dcw 0x7274533C
dcw 0x3E676E69
dcw 0x00000000
# "Array<Char>"
dcw 11
&string14:
dcw 0x61727241
dcw 0x68433C79
dcw 0x003E7261
# "Array<List.T>"
dcw 13
&string15:
dcw 0x61727241
dcw 0x694C3C79
dcw 0x542E7473
dcw 0x0000003E
